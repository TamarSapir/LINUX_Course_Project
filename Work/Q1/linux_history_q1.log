    1  git checkout BR_Q4
    2  cd Work/Q4
    3  touch ex4.sh
    4  chmod +x ex4.sh
    5  ./ex4.sh my_plants.csv
    6  ./ex4.sh
    7  ./ex4.sh plants.py
    8  ./ex4.sh plants.csv
    9  #!/bin/bash
   10  LOG_FILE="process_log.log"
   11  ERROR_LOG_FILE="process_error.log"
   12  VENV_DIR="../venv"
   13  PYTHON_SCRIPT=$(find ~/LINUX_Course_Project -type f -name "requirements.txt" | head -n 1)
   14  if [[ -z "$PYTHON_SCRIPT" ]]; then     echo "Error: Could not find requirements.txt anywhere in the project!" | tee -a "$ERROR_LOG_FILE";     exit 1; fi
   15  echo "Using requirements file: $PYTHON_SCRIPT" | tee -a "$LOG_FILE"
   16  echo "======== Starting CSV Processing ========" | tee -a "$LOG_FILE"
   17  #get the csv
   18  CSV_FILE=$1
   19  if [[ -z "$CSV_FILE" ]]; then     CSV_FILE=$(find ~/LINUX_Course_Project -type f -name "*.csv" | head -n 1);     [[ -z "$CSV_FILE" ]] && { echo "No CSV file found!" | tee -a "$ERROR_LOG_FILE"; exit 1; }; fi
   20  echo "Using CSV file: $CSV_FILE" | tee -a "$LOG_FILE"
   21  # making a venv 
   22  if [[ ! -d "$VENV_DIR" ]]; then     echo "Creating virtual environment at $VENV_DIR" | tee -a "$LOG_FILE";     python3 -m venv "$VENV_DIR"; fi
   23  # start venv
   24  source "$VENV_DIR/bin/activate"
   25  if [[ $? -ne 0 ]]; then     echo "Failed to activate virtual environment!" | tee -a "$ERROR_LOG_FILE";     exit 1; fi
   26  echo "Virtual environment activated." | tee -a "$LOG_FILE"
   27  # install packeges we need
   28  pip install -r ../requirements.txt 2>>"$ERROR_LOG_FILE"
   29  echo "Dependencies installed." | tee -a "$LOG_FILE"
   30  # run code for every line in csv
   31  mkdir -p Diagrams
   32  while IFS=',' read -r plant heights leaf_counts dry_weights; do     [[ "$plant" == "Plant" ]] && continue  ;      echo "Processing plant: $plant" | tee -a "$LOG_FILE";     mkdir -p "Diagrams/$plant";      python3 "$PYTHON_SCRIPT" --plant "$plant" --height $heights --leaf_count $leaf_counts --dry_weight $dry_weights >> "$LOG_FILE" 2>> "$ERROR_LOG_FILE";      if [[ $? -eq 0 ]]; then         mv "${plant}_scatter.png" "${plant}_histogram.png" "${plant}_line_plot.png" "Diagrams/$plant/" 2>/dev/null;         echo "Diagrams for $plant saved in Diagrams/$plant/" | tee -a "$LOG_FILE";     else         echo "Error processing $plant. Check $ERROR_LOG_FILE for details." | tee -a "$ERROR_LOG_FILE";     fi;  done < "$CSV_FILE"
   33  echo "======== Processing Completed ========" | tee -a "$LOG_FILE"
   34  find ~/LINUX_Course_Project -type f -name "plants.csv"
   35  ./ex4.sh
   36  cat process_error.log
   37  find ~/LINUX_Course_Project -type f -name "requirements.txt"
   38  rm -f process_error.log process_log.log
   39  ./ex4.sh
   40  find ~/LINUX_Course_Project -type f -name "requirements.txt"
   41  rm -rf ../venv
   42  python3 -m venv ../venv
   43  (venv) root@Tamar-sapir:~/LINUX_Course_Project/Work/Q4# rm -rf ../venv
   44  (venv) root@Tamar-sapir:~/LINUX_Course_Project/Work/Q4# python3 -m venv ../venv
   45  bash: /root/LINUX_Course_Project/Work/venv/bin/python3: No such file or directory
   46  (venv) root@Tamar-sapir:~/LINUX_Course_Project/Work/Q4 
   47  python3 --version
   48  which python3
   49  pip install --upgrade pip
   50  pip list
   51  pip install matplotlib
   52  ./ex4.sh
   53  rm -f process_error.log process_log.log
   54  deactivate
   55  rm -rf ../venv
   56  python3 -m venv ../venv
   57  source ../venv/bin/activate
   58  pip install --upgrade pip
   59  pip install matplotlib
   60  ./ex4.sh
   61  rm -f process_error.log process_log.log
   62  ./ex4.sh
   63  rm -f process_error.log process_log.log
   64  ./ex4.sh
   65  TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
   66  tar -czvf BACKUPS/Plants_Backup_$TIMESTAMP.tar.gz Diagrams/*
   67  git checkout master -- BACKUPS
   68  git checkout master
   69  ls -l
   70  git checkout BR_Q4
   71  git checkout master -- BACKUPS
   72  git checkout BR_Q4
   73  TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
   74  tar -czvf BACKUPS/Plants_Backup_$TIMESTAMP.tar.gz Diagrams/*
   75  git checkout BR_Q4
   76  ls -l
   77  (venv) root@Tamar-sapir:~/LINUX_Course_Project/Work/Q4# TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
   78  tar -czvf BACKUPS/Plants_Backup_$TIMESTAMP.tar.gz Diagrams/*
   79  tar (child): BACKUPS/Plants_Backup_2025-03-06_22-04-16.tar.gz: Cannot open: No such file or directory
   80  tar (child): Error is not recoverable: exiting now
   81  Diagrams/Daffodil/
   82  Diagrams/Daffodil/Daffodil_scatter.png
   83  tar: BACKUPS/Plants_Backup_2025-03-06_22-04-16.tar.gz: Cannot write: Broken pipe
   84  tar: Child returned status 2
   85  tar: Error is not recoverable: exiting now
   86  (venv) root@Tamar-sapir:~/LINUX_Course_Project/Work/Q4# 
   87  cd .
   88  cd ..
   89  TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
   90  tar -czvf BACKUPS/Plants_Backup_$TIMESTAMP.tar.gz Diagrams/*
   91  TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")
   92  tar -czvf BACKUPS/Plants_Backup_$TIMESTAMP.tar.gz /Work/Q4 Diagrams/*
   93  rm /root/LINUX_Course_Project/BACKUPS/Plants_Backup_2025-03-06_22-07-34.tar.gz
   94  git add .
   95  git commit -m "Added backup of plant diagrams and finalized script"
   96  git checkout BR_Q4
   97  cat .gitignore
   98  git add -f venv/
   99  git commit -m "Force add virtual environment to Git"
  100  git push origin BR_Q4
  101  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Results          --log-level debug          --backup yes
  102  ./Work/Q4/ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv                   --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams                   --log-level debug                   --backup yes
  103  rm process_error.log
  104  rm process_log.log
  105  cd Q4
  106  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  107  cd Work
  108  cd Q4
  109  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  110  rm process_error.log
  111  rm process_log.log
  112  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  113  rm process_error.log
  114  rm process_log.log
  115  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  116  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes          --temp-dir /tmp/workdir          --reuse-venv          --silent
  117  rm process_log.log
  118  rm -rf Diagrams/*
  119  rm BACKUPS
  120  rm -rf /root/LINUX_Course_Project/Work/Q4/BACKUPS
  121  echo "Deleted BACKUPS directory from Q4."
  122  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes          --temp-dir /tmp/workdir          --reuse-venv          --silent
  123  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes          --temp-dir /tmp/workdir          --reuse-venv          --silent
  124  history > linux_history4.log
  125  mv /root/LINUX_Course_Project/Work/Q4/linux_history4.log /root/LINUX_Course_Project/
  126  git add .
  127  git commit -m "Final updates for 4Q_BR: added Linux history log, improved script"
  128  cd
  129  cd LINUX_Course_Project
  130  git add .
  131  git commit -m "Final updates for 4Q_BR: added Linux history log, improved script"
  132  git checkout master
  133  git merge 4Q_BR --no-ff -m "Merging 4Q_BR into master"
  134  git push origin master
  135  git push origin 4Q_BR
  136  git merge BR_Q4 --no-ff -m "Merging BR_Q4 into master"
  137  git push origin master
  138  git push origin BR_Q4
  139  git pull origin master
  140  git checkout BR_Q2
  141  pip uninstall -y matplotlib argparse
  142  pip install -r requirements.txt
  143  python3 Work/Q2/plants.py --plant "Cactus" --height 10 15 20 25 30 --leaf_count 5 6 7 8 9 --dry_weight 1.2 1.5 1.7 2.0 2.3
  144  deactivate
  145  which python3
  146  find ~/LINUX_Course_Project -type f -name "plants.py"
  147  cd ~/LINUX_Course_Project
  148  python3 Work/Q2/plants.py --plant "Cactus" --height 10 15 20 25 30 --leaf_count 5 6 7 8 9 --dry_weight 1.2 1.5 1.7 2.0 2.3
  149  git checkout BR_Q2
  150  ls -l Work/Q2/plants.py
  151  python3 Work/Q2/plant.py --plant "Cactus" --height 10 15 20 25 30 --leaf_count 5 6 7 8 9 --dry_weight 1.2 1.5 1.7 2.0 2.3
  152  rm /root/LINUX_Course_Project/Cactus_histogram.png
  153  rm /root/LINUX_Course_Project/Cactus_line_plot.png
  154  rm /root/LINUX_Course_Project/Cactus_scatter.png
  155  git checkout BR_Q3
  156  git add .
  157  git commit -m "Finalizing changes in BR_Q2 before switching branches"
  158  git push origin BR_Q2
  159  git checkout BR_Q3
  160  chmod +x menu.sh
  161  ./menu.sh
  162  pip install --upgrade pip
  163  pip uninstall matplotlib -y
  164  pip install matplotlib
  165  sudo apt-get install python3-tk -y
  166  pip install numpy scipy pandas
  167  python3 -m pip list | grep matplotlib
  168  ./menu.sh
  169  rm /root/LINUX_Course_Project/Rose_histogram.png
  170  rm /root/LINUX_Course_Project/Rose_line_plot.png
  171  rm /root/LINUX_Course_Project/Rose_scatter.png
  172  ./menu.sh
  173  rm /root/LINUX_Course_Project/Rose_scatter.png
  174  rm /root/LINUX_Course_Project/Rose_line_plot.png
  175  rm /root/LINUX_Course_Project/Rose_histogram.png
  176  git add .
  177  git commit -m "Updated plant.py and menu.sh to use correct paths and fixed Matplotlib issues"
  178  git push origin BR_Q3
  179  git checkout master
  180  git merge BR_Q3
  181  git status
  182  git add Work/Q2/plant.py menu.sh
  183  git commit -m "Resolved merge conflicts in plant.py and menu.sh"
  184  git push origin master
  185  git checkout BR_Q4
  186  git checkout mater
  187  git checkout master
  188  git add .
  189  git commit -m "Resolved merge conflicts in plant.py and menu.sh"
  190  git push origin master
  191  git add .
  192  git commit -m "Resolved merge conflicts in plant.py and menu.sh"
  193  git push origin master
  194  git checkout master
  195  git checkout BR_Q4
  196  echo "Dependencies installed successfully." | tee -a "$LOG_FILE"
  197  rm process_log.log
  198  cd ~/LINUX_Course_Project/Work/Q4
  199  chmod +x ex4.sh
  200  rm -rf ../venv
  201  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  202  rm process_error.log
  203  rm process_log.log
  204  rm -rf ../venv
  205  ./ex4.sh --path /root/LINUX_Course_Project/DOWNLOADS/LINUX_COURSE_WORK-downloads/plants.csv          --output-dir /root/LINUX_Course_Project/Work/Q4/Diagrams          --log-level debug          --backup yes
  206  cd ..
  207  rm /root/LINUX_Course_Project/Rose_histogram.png
  208  rm /root/LINUX_Course_Project/Rose_line_plot.png
  209  rm /root/LINUX_Course_Project/Rose_scatter.png
  210  git add .
  211  git commit -m "Updated ex4.sh to use plant.py, fixed requirements handling, and added logging"
  212  git push origin BR_Q4
  213  git checkout master
  214  git pull origin master 
  215  git merge BR_Q4
  216  git add Work/Q2/plant.py
  217  git add requirements.txt
  218  git add Work/Q5/Rose_histogram.png
  219  git add Work/Q5/Rose_line_plot.png
  220  git commit -m "Resolved merge conflicts between master and BR_Q4"
  221  git push origin master
  222  git add Work/Q2/plant.py
  223  git commit -m "Resolved merge conflict in Work/Q2/plant.py"
  224  git push origin master
  225  git add Work/Q2/plant.py
  226  git commit -m "Resolved merge conflict in Work/Q2/plant.py"
  227  git push origin master
  228  git checkout BR_Q1
  229  output_file="q1_output_forfilming.txt"
  230  echo "Time: $(date)" > "$output_file"
  231  echo "USER DETAILS: $(grep "^$(whoami):" /etc/passwd)" >> "$output_file"
  232  echo "REPO: $(pwd)" >> "$output_file"
  233  echo "GithubUrl: https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPOSITORY.git" >> "$output_file"
  234  echo "VERSIONID: $(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f2 | tr -d '\"')" >> "$output_file"
  235  echo "-------------------------------------------" >> "$output_file"
  236  sudo apt-get install -y tree
  237  echo "Repository Structure:" >> "$output_file"
  238  tree "$(pwd)" >> "$output_file"
  239  echo "--------------------------------------------" >> "$output_file"
  240  echo "List of all .sh files under user folder recursively:" >> "$output_file"
  241  find ~ -type f -name "*.sh" >> "$output_file"
  242  cat "$output_file"
  243  git log --oneline > git_commits.log
  244  cat git_commits.log
  245  history > linux_history_q1.log
  246  git add q1_output_forfilming.txt git_commits.log linux_history_q1.log
  247  git commit -m "Added Q1 report, git commits history, and Linux commands history"
  248  git push origin BR_Q1
  249  rm Work/Q1/q1_output_forfilming.txt
  250  rm git_commits.log linux_history_q1.log
  251  rm q1_output_forfilmming.txt
  252  rm q1_output_forfilming.txt
  253  mkdir -p q1
  254  output_file="q1/q1_output_forfilming.txt"
  255  echo "Time: $(date)" > "$output_file"
  256  echo "USER DETAILS: $(grep "^$(whoami):" /etc/passwd)" >> "$output_file"
  257  echo "REPO: $(pwd)" >> "$output_file"
  258  echo "GithubUrl: https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPOSITORY.git" >> "$output_file"
  259  echo "VERSIONID: $(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f2 | tr -d '\"')" >> "$output_file"
  260  echo "-------------------------------------------" >> "$output_file"
  261  sudo apt-get install -y tree
  262  echo "Repository Structure:" >> "$output_file"
  263  tree "$(pwd)" >> "$output_file"
  264  echo "--------------------------------------------" >> "$output_file"
  265  echo "List of all .sh files under user folder recursively:" >> "$output_file"
  266  find ~ -type f -name "*.sh" >> "$output_file"
  267  cat "$output_file"
  268  git log --oneline > q1/git_commits.log
  269  cat q1/git_commits.log
  270  history > q1/linux_history_q1.log
  271  git add q1/q1_output_forfilming.txt q1/git_commits.log q1/linux_history_q1.log
  272  git commit -m "Added Q1 report, git commits history, and Linux commands history"
  273  git push origin BR_Q1
  274  rm q1
  275  rmdir q1
  276  rm -rf Work/Q1
  277  git restore --staged Work/Q1
  278  git restore Work/Q1
  279  rm -rf q1
  280  mkdir -p Work/Q1
  281  output_file="Work/Q1/q1_output_forfilming.txt"
  282  echo "Time: $(date)" > "$output_file"
  283  echo "USER DETAILS: $(grep "^$(whoami):" /etc/passwd)" >> "$output_file"
  284  echo "REPO: $(pwd)" >> "$output_file"
  285  echo "GithubUrl: https://github.com/YOUR_GITHUB_USERNAME/YOUR_REPOSITORY.git" >> "$output_file"
  286  echo "VERSIONID: $(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f2 | tr -d '\"')" >> "$output_file"
  287  echo "-------------------------------------------" >> "$output_file"
  288  sudo apt-get install -y tree
  289  echo "Repository Structure:" >> "$output_file"
  290  tree "$(pwd)" >> "$output_file"
  291  echo "--------------------------------------------" >> "$output_file"
  292  echo "List of all .sh files under user folder recursively:" >> "$output_file"
  293  find ~ -type f -name "*.sh" >> "$output_file"
  294  cat "$output_file"
  295  git log --oneline > Work/Q1/git_commits.log
  296  cat Work/Q1/git_commits.log
  297  history > Work/Q1/linux_history_q1.log
